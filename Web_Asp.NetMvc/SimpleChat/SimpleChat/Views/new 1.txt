@using SimpleChat.Models
@model UserView
@{
    ViewBag.Title = "Login";
}
                <!-- login form -->
@using (Html.BeginForm("Edit", "UserModels", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

<meta name="viewport" content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript">
    addEventListener("load", function ()
    { setTimeout(hideURLbar, 0); }, false);
    function hideURLbar()
    { window.scrollTo(0, 1); }
</script>
<script src="../Scripts/jquery-3.2.1.min.js" type="text/javascript"></script>
<link href="~/Content/login-style.css" rel="stylesheet" type="text/css" media="all" />
<link href="//fonts.googleapis.com/css?family=Cormorant+Garamond:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <link href="//fonts.googleapis.com/css?family=Arsenal:400,400i,700,700i" rel="stylesheet">
<div class="main-agileinfo slider">
    <div class="items-group">
        <div class="item agileits-w3layouts">
            <div class="block text main-agileits">
                <span class="circleLight"></span>      
                    <div class="login-form loginw3-agile">
                        @Html.AntiForgeryToken()
                        <div class="agile-row">
                            
                            <h1>Log-In</h1>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)
                            <div class="login-agileits-top">

                                <p>First Name </p>
                                @*@Html.TextBoxFor(m => m.Email, new { @class = "name" })*@
                                @*<input type="text" class="name" name="FirstName" autocomplete="off" />*@
                                  @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new {@autocomplete = "off"} })
                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "ErorrVlad", autocomplete = "off" })

                                <p>Last Name</p>
                                @*@Html.PasswordFor(m => m.Password, new { @class = "passwordd" })*@
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @autocomplete = "off" } })
                                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "ErorrVlad" })
                                <p>Gander</p>
                                @Html.EditorFor(model => model.Gander, new { htmlAttributes = new { @autocomplete = "off" } })
                                @Html.ValidationMessageFor(m => m.Gander, "", new { @class = "ErorrVlad" })

                                <p>Status</p>
                                @*@Html.PasswordFor(m => m.Password, new { @class = "passwordd" })*@
                                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @autocomplete = "off" } })
                                @Html.ValidationMessageFor(m => m.Status, "", new { @class = "ErorrVlad" })

                                <p>Phone Number</p>
                                @*@Html.PasswordFor(m => m.Password, new { @class = "passwordd" })*@
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @autocomplete = "off" } })
                                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "ErorrVlad" })

                                <p>Profile Image</p>
                                @*@Html.PasswordFor(m => m.Password, new { @class = "passwordd" })*@
                                @*<input type="text" class="name" name="ImageFile" autocomplete="off" />*@
                                @Html.TextBoxFor(modelo => modelo.ImageFile, new { type = "file", onchange = "readURL(this);" })
                                <img id="blah" src="@Url.Content(Model.ProfileImage)" alt="image" style="margin-top:20px; width:150px;height:150px;max-width: 100%; height: auto;" />
                                <input type="submit" class="login" value="Next">
                            </div>
                        </div>
                    </div>
           
            </div>

        </div>

    </div>
   
</div>
<script>

		function readURL(input) {
			if (input.files && input.files[0]) {
				var reader = new FileReader();

				reader.onload = function (e) {
					document.getElementById('blah').src =  e.target.result;
				}

			reader.readAsDataURL(input.files[0]);
			}
		}
</script>
}
